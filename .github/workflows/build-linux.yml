name: build-linux

on: [ push, pull_request ]

jobs:
  build-linux:
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash
    env:
      conan_path: "$HOME/.local/bin"
      conan_user_home: "${{ github.workspace }}/conan-cache"
    strategy:
      fail-fast: false
      matrix:
        config:
          - {
            name: "Ubuntu Clang Debug",
            artifact: "linux-clang-debug.tar.xz",
            cc: "clang-10",
            cxx: "clang++-10",
            build_type: "Debug"
          }
          - {
            name: "Ubuntu GCC Debug",
            artifact: "linux-gcc-debug.tar.xz",
            cc: "gcc-10",
            cxx: "g++-10",
            build_type: "Debug"
          }
          - {
            name: "Ubuntu Clang Release",
            artifact: "linux-clang-release.tar.xz",
            cc: "clang-10",
            cxx: "clang++-10",
            build_type: "Release"
          }
          - {
            name: "Ubuntu GCC Release",
            artifact: "linux-gcc-release.tar.xz",
            cc: "gcc-10",
            cxx: "g++-10",
            build_type: "Release"
          }
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Cache
        uses: actions/cache@v2
        env:
          cache-name: cache-conan-modules
        with:
          path: |
            ${{ env.conan_user_home }}
          key: ${{ runner.os }}-${{ matrix.config.build_type }}-${{ hashFiles('CMakeLists.txt') }}-${{ hashFiles('Development/CMake/Conan.cmake') }}

      - name: Update environment
        run: |
          sudo apt update -qq
          sudo apt install -y \
            ccache \
            clang-10 \
            cmake \
            gcc-10 \
            g++-10

      - name: Install Conan
        shell: bash
        run: |
          python3 -m pip install --upgrade pip setuptools
          python3 -m pip install conan

      - name: Configure CMake
        run: |
          export CC=${{ matrix.config.cc }}
          export CXX=${{ matrix.config.cxx }}

          cmake . -Bbuild -DCMAKE_BUILD_TYPE=${{ matrix.config.build_type }}

      - name: Build
        run: |
          cmake --build build --parallel $(nproc)

      - name: Test
        run: |
          cd build
          ctest -C ${{ matrix.config.build_type }}

      - name: Prepare upload
        run: |
          tar cfz ${{ matrix.config.artifact }} build

      - name: Upload
        uses: actions/upload-artifact@v1
        with:
          path: ${{ matrix.config.artifact }}
          name: ${{ matrix.config.artifact }}
