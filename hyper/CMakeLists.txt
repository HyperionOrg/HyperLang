#-------------------------------------------------------------------------------------------
# Copyright (c) 2020-present, SkillerRaptor <skillerraptor@protonmail.com>
#
# SPDX-License-Identifier: MIT
#-------------------------------------------------------------------------------------------

#-------------------------------------------------------------------------------------------
# hyper
#-------------------------------------------------------------------------------------------
set(SOURCES
        src/main.cpp
        src/hyper/compiler.cpp
        src/hyper/data_type.cpp
        src/hyper/diagnostics.cpp
        src/hyper/formatter.cpp
        src/hyper/lexer.cpp
        src/hyper/parser.cpp
        src/hyper/symbol_collector.cpp
        src/hyper/token.cpp
        src/hyper/utilities.cpp
        src/hyper/ast/ast_node.cpp
        src/hyper/ast/declarations/declaration.cpp
        src/hyper/ast/declarations/export_declaration.cpp
        src/hyper/ast/declarations/extern_declaration.cpp
        src/hyper/ast/declarations/function_declaration.cpp
        src/hyper/ast/declarations/import_declaration.cpp
        src/hyper/ast/declarations/parameter_declaration.cpp
        src/hyper/ast/declarations/translation_unit_declaration.cpp
        src/hyper/ast/declarations/variable_declaration.cpp
        src/hyper/ast/expressions/binary_expression.cpp
        src/hyper/ast/expressions/call_expression.cpp
        src/hyper/ast/expressions/cast_expression.cpp
        src/hyper/ast/expressions/conditional_expression.cpp
        src/hyper/ast/expressions/expression.cpp
        src/hyper/ast/expressions/identifier_expression.cpp
        src/hyper/ast/expressions/unary_expression.cpp
        src/hyper/ast/literals/bool_literal.cpp
        src/hyper/ast/literals/floating_literal.cpp
        src/hyper/ast/literals/integer_literal.cpp
        src/hyper/ast/literals/literal.cpp
        src/hyper/ast/literals/string_literal.cpp
        src/hyper/ast/statements/assign_statement.cpp
        src/hyper/ast/statements/compound_assign_statement.cpp
        src/hyper/ast/statements/compound_statement.cpp
        src/hyper/ast/statements/expression_statement.cpp
        src/hyper/ast/statements/if_statement.cpp
        src/hyper/ast/statements/print_statement.cpp
        src/hyper/ast/statements/return_statement.cpp
        src/hyper/ast/statements/statement.cpp
        src/hyper/ast/statements/while_statement.cpp
        src/hyper/c/c_compiler.cpp
        src/hyper/c/c_generator.cpp
        src/hyper/c/c_linker.cpp
        src/hyper/c/microsoft.cpp
        src/hyper/utilities/args_parser.cpp
        src/hyper/validators/scope_validator.cpp
        src/hyper/validators/type_validator.cpp)

set(HEADERS
        include/hyper/compiler.hpp
        include/hyper/data_type.hpp
        include/hyper/diagnostics.hpp
        include/hyper/formatter.hpp
        include/hyper/lexer.hpp
        include/hyper/logger.hpp
        include/hyper/identifier.hpp
        include/hyper/parser.hpp
        include/hyper/source_range.hpp
        include/hyper/symbol.hpp
        include/hyper/symbol_collector.hpp
        include/hyper/token.hpp
        include/hyper/utilities.hpp
        include/hyper/ast/ast.hpp
        include/hyper/ast/ast_node.hpp
        include/hyper/ast/ast_visitor.hpp
        include/hyper/ast/declarations/declaration.hpp
        include/hyper/ast/declarations/extern_declaration.hpp
        include/hyper/ast/declarations/function_declaration.hpp
        include/hyper/ast/declarations/import_declaration.hpp
        include/hyper/ast/declarations/parameter_declaration.hpp
        include/hyper/ast/declarations/public_declaration.hpp
        include/hyper/ast/declarations/translation_unit_declaration.hpp
        include/hyper/ast/declarations/variable_declaration.hpp
        include/hyper/ast/expressions/binary_expression.hpp
        include/hyper/ast/expressions/call_expression.hpp
        include/hyper/ast/expressions/cast_expression.hpp
        include/hyper/ast/expressions/conditional_expression.hpp
        include/hyper/ast/expressions/expression.hpp
        include/hyper/ast/expressions/identifier_expression.hpp
        include/hyper/ast/expressions/unary_expression.hpp
        include/hyper/ast/literals/bool_literal.hpp
        include/hyper/ast/literals/floating_literal.hpp
        include/hyper/ast/literals/integer_literal.hpp
        include/hyper/ast/literals/literal.hpp
        include/hyper/ast/literals/string_literal.hpp
        include/hyper/ast/statements/assign_statement.hpp
        include/hyper/ast/statements/compound_assign_statement.hpp
        include/hyper/ast/statements/compound_statement.hpp
        include/hyper/ast/statements/expression_statement.hpp
        include/hyper/ast/statements/if_statement.hpp
        include/hyper/ast/statements/print_statement.hpp
        include/hyper/ast/statements/return_statement.hpp
        include/hyper/ast/statements/statement.hpp
        include/hyper/ast/statements/while_statement.hpp
        include/hyper/c/c_compiler.hpp
        include/hyper/c/c_generator.hpp
        include/hyper/c/c_linker.hpp
        include/hyper/c/microsoft.hpp
        include/hyper/utilities/args_parser.hpp
        include/hyper/validators/scope_validator.hpp
        include/hyper/validators/type_validator.hpp)

add_executable(hyper ${SOURCES} ${HEADERS})
target_link_libraries(
        hyper
        PRIVATE
        project_options
        project_warnings)
target_include_directories(
        hyper
        PUBLIC
        include)
