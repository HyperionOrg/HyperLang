/*
 * Copyright (c) 2020-2022, SkillerRaptor <skillerraptor@protonmail.com>
 *
 * SPDX-License-Identifier: MIT
 */

// This is a comment

fn function_1() -> void
{
}

fn function_2() -> void
{
}

fn main() -> i32
{
	let var_1: bool = true;
	let var_2: i8 = (-1 + -2) as i8;
	let var_3: i16 = -1 as i16;
	let var_4: i32 = -1 as i32;
	let var_5: i64 = -1 as i64;
	let var_6: u8 = 1 as u8;
	let var_7: u16 = 1 as u16;
	let var_8: u32 = 1 as u32;
	let var_9: u64 = 1 as u64;
	let var_10: isize = -1 as isize;
	let var_11: usize = 1 as usize;
	let var_12: string = "Placeholder";

	let var_13: mutable bool = true;
	var_13 = false;
	var_13 = !var_13;
	var_13 = var_13 && var_13;
	var_13 = var_13 || var_13;
	var_13 = var_13 == var_13;
	var_13 = var_13 < var_13;
	var_13 = var_13 > var_13;
	var_13 = var_13 <= var_13;
	var_13 = var_13 >= var_13;

	let var_14: mutable u64 = 0 as u64
;
	var_14 += 1 as u64;
	var_14 -= 1 as u64;
	var_14 *= 1 as u64;
	var_14 /= 1 as u64;
	var_14 %= 1 as u64;
	var_14 &= 1 as u64;
	var_14 |= 1 as u64;
	var_14 ^= 1 as u64;
	var_14 <<= 1 as u64;
	var_14 >>= 1 as u64;

	var_14 = 1 as u64 + 1 as u64;
	var_14 = 1 as u64 - 1 as u64;
	var_14 = 1 as u64 * 1 as u64;
	var_14 = 1 as u64 / 1 as u64;
	var_14 = 1 as u64 % 1 as u64;
	var_14 = 1 as u64 & 1 as u64;
	var_14 = 1 as u64 | 1 as u64;
	var_14 = 1 as u64 ^ 1 as u64;
	var_14 = ~1 as u64;

	var_14++;
	++var_14;

	var_13 = var_14 > 1 as u64 ? true : false;

	if (var_14 > 0 as u64)
	{
		function_1();
	}
	else
	{
		function_2();
	}

	while (var_14 > 0 as u64)
	{
		function_1();
	}

	return 0;
}
